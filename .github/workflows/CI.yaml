name: CI

on:
  push:
  pull_request:
  schedule:
    # nightly tests
    - cron: '0 0 * * *'

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #, macOS-latest]
        cfg:
          - {python-version: 3.6, openmm: "latest"}
          - {python-version: 3.7, openmm: "latest"}
          - {python-version: 3.7, openmm: "beta"}
          - {python-version: 3.7, openmm: "nightly"}
          - {python-version: 3.7, openmm: "conda-forge"}

    env:
      ORGNAME: omnia
      PACKAGENAME: perses
      OE_LICENSE: $HOME/oe_license.txt
      OPENEYE_CHANNEL: -i https://pypi.anaconda.org/OpenEye/simple
      CI_OS: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    - name: Configure conda
      shell: bash
      run: |
        . devtools/scripts/initialize_conda.sh
        conda activate
        conda config --set always_yes True
        conda config --add channels omnia --add channels conda-forge --add channels openeye
        conda update --quiet --all
        conda install conda conda-build jinja2 anaconda-client
        conda info
        conda list
    - name: Decrypt OpenEye license
      shell: bash
      env:
        ENC_OE_LICENSE: ${{ secrets.ENC_OE_LICENSE }}
      run: |
        echo "${ENC_OE_LICENSE}" > $HOME/oe_license.txt

    - name: Build recipe
      shell: bash
      run: |
        . devtools/scripts/initialize_conda.sh
        conda activate
        conda build --python=${{ matrix.cfg.python-version }} devtools/conda-recipe
    - name: Prepare test environment
      shell: bash
      run: |
        . devtools/scripts/initialize_conda.sh
        conda activate
        conda create -n test -c local ${PACKAGENAME}-dev nose nose-timer
        conda activate test
        # Install openmm-forcefields via pip (until available via omnia)
        conda install --yes tinydb "openforcefield>=0.6.0" "openforcefields>=1.0.0"
        pip install git+https://github.com/openmm/openmm-forcefields.git
        case ${{ matrix.cfg.openmm }} in
          latest)
            echo "Using latest release OpenMM."
            conda install -c omnia openmm;;
          beta)
            echo "Using OpenMM beta"
            conda install -c omnia/label/beta openmm;;
          nightly)
            echo "Using OpenMM nightly dev build."
            conda install -c omnia-dev openmm;;
          conda-forge)
            echo "Using OpenMM conda-forge testing build."
            conda install -c conda-forge/label/testing openmm;;
        esac
    - name: Test the package
      shell: bash
      run: |
        . devtools/scripts/initialize_conda.sh
        conda activate test
        export OE_LICENSE="$HOME/oe_license.txt"
        pushd .
        nosetests ${PACKAGENAME} --nocapture --verbosity=3 --with-timer -a '!advanced'
        popd
    - name: Deploy
      shell: bash
      if: false
      run: |
        echo "Deployment has not been implemented yet"
